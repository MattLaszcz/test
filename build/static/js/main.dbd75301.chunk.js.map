{"version":3,"sources":["containers/Types/RothIRA_1.js","components/Post/Post.js","containers/Blog/FullPost/FullPost.js","axios.js","containers/Unanswered/Unanswered-Posts.js","containers/Blog/answered/answered-posts.js","containers/Blog/Posts/Posts.js","hoc/asyncComponent.js","containers/Blog/Blog.js","images/Ecommerce_(39).jpg","App.js","registerServiceWorker.js","index.js"],"names":["RothIRA_1","state","title","content","author","submitted","redirect","this","to","className","Component","post","props","body","type","id","name","placeholder","onChange","event","target","value","onClick","answer","clicked","pathname","hash","search","path","component","Answered","FullPost","loadedPost","deletePostHandler","axios","delete","match","params","then","response","console","log","loadData","get","setState","data","style","textAlign","instance","create","baseURL","defaults","headers","common","Posts","posts","postAnswerHandler","Object","keys","values","data_1","data_2","JSON","stringify","patch","updatedPosts","map","key","catch","error","url","exact","Myquestions","postSelectedHandler","history","push","Unanswered","isFiltered","isError","isAnswered","displayAnswerHandler","onClickFilter","prevState","x","document","getElementById","innerHTML","visiblePosts","filter","asyncComponent","importComponent","cmp","default","C","AsyncNewPost","Blog","auth","activeClassName","render","App","basename","process","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","interceptors","request","use","Promise","reject","ReactDOM","URL","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dbd75301.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass RothIRA_1 extends Component {\r\n    state = {\r\n        \r\n        title: '',\r\n        content: '',\r\n        author: 'Max',\r\n        submitted: false\r\n    }\r\n\r\n    render () {\r\n        let redirect = null;\r\n        if (this.state.submitted) {\r\n            redirect = <Redirect to=\"/posts/\" />;\r\n        }\r\n        return (\r\n            <div className=\"NewPost\">\r\n                {redirect}\r\n                <hi>THESE ARE ROTH IRA</hi>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RothIRA_1;","import React from 'react';\n//import { render } from 'react-dom';\nimport {Route, NavLink, Switch, Redirect } from 'react-router-dom';\nimport Answered from '../../containers/Blog/answered/answered-posts';\nimport './Post.css';\n\n\n//import axios from 'axios';\n\n\nimport RothIRA_1 from '../../containers/Types/RothIRA_1';\n// import HashTag from './Hashtag/Hashtag';\n\n\nfunction post (props) { \n   \n\n// function linkTypeHandler (type) {\n//     console.log('type='+type);\n//     console.log(typeof(type));\n   \n// };\n\n// postDataHandler = () => {\n//     const data = {\n//         answer: this.state.answer,\n//     };\n//     axios.post('/posts.json', data )\n//         .then( response => {\n//             console.log( response );\n//             this.props.history.replace('/posts');\n//             this.setState( { submitted: true } );\n//         } );\n// }\n\n\n\nreturn (\n    <article className=\"Post\">\n        <h1>{props.title}</h1>\n        <p className=\"Body-Content\">{props.body}</p>\n        <div className=\"Info\">\n{/* <button className=\"Type\">{props.type}</button> */}\n{/* <HashTag type={props.type}/> */}\n<form>\n    <div className=\"Answer-Section\">\n        {/* <input type=\"text\" className=\"Question-Answer\" name=\"Answer\" placeholder=\"Your Answer...\" value={this.state.answer} onChange={( event ) => this.setState( { answer: event.target.value } )}></input> */}\n        <input type=\"text\" className=\"Question-Answer\" id={props.id} name=\"Answer\" placeholder=\"Your Answer...\" onChange={(event) => props.onChange(event.target.value,props.id)}></input>   \n        {/* onChange={(event) => props.onChange(event.target.value,props.id)} */}\n        {/* <li className=\"Answer-Button\" ><button>Answer</button></li>  */}\n        <li className=\"Answer-Button\"><input type=\"submit\" value=\"Answer\" id=\"submitButton\" onClick={(answer,id)=>props.clicked(props.answer, props.id)}/></li>\n\n    </div>\n    <div className=\"Answer\" >\n        <p>{props.answer}</p>\n    </div>\n</form>\n        <ul>\n       \n            <li className=\"Type-Link\"><NavLink to={{\n                pathname: '/'+ props.type,\n                hash: '#submit',\n                search: '?quick-submit=true'\n                }}>{props.type}</NavLink></li>\n            \n                        \n        </ul>\n        \n    </div>\n        \n        {/* <Link to=\"/RothIRA\"><button>{props.type}</button></Link> */}\n        \n        {/* <Route path={'/' + props.type} render={() => (<RothIRA_1 type={props.type} />)}/> */}\n        <Switch>\n            <Route path=\"/RothIRA\" component={RothIRA_1} />\n            <Route path=\"/answered\" component={Answered} />\n             {/* <Route path={'/' + props.type} component={RothIRA_1} /> */}\n             {/* <Route path= {'/'+ props.type} component={RothIRA} /> */}\n             \n\n\n        </Switch>\n    </article>\n    \n);\n}\n\n\n\nexport default post;\n\n\n{/* <NavLink to={{\n                                pathname: '/answered',\n                                hash: '#submit',\n                                search: '?quick-submit=true'\n                            }}>Unanswered</NavLink> */}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './FullPost.css';\n\nclass FullPost extends Component {\n    state = {\n        loadedPost: null\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        this.loadData();\n    }\n\n    componentDidUpdate() {\n        this.loadData();\n    }\n\n    loadData () {\n        if ( this.props.match.params.id ) {\n            if ( !this.state.loadedPost || (this.state.loadedPost && this.state.loadedPost.id !== +this.props.match.params.id) ) {\n                axios.get( '/posts/' + this.props.match.params.id )\n                    .then( response => {\n                        // console.log(response);\n                        this.setState( { loadedPost: response.data } );\n                    } );\n            }\n        }\n    }\n\n    deletePostHandler = () => {\n        axios.delete('/posts/' + this.props.match.params.id)\n            .then(response => {\n                console.log(response);\n            });\n    }\n\n    render () {\n        let post = <p style={{ textAlign: 'center' }}>Please select a Post!</p>;\n        if ( this.props.match.params.id ) {\n            post = <p style={{ textAlign: 'center' }}>Loading...!</p>;\n        }\n        if ( this.state.loadedPost ) {\n            post = (\n                <div className=\"FullPost\">\n                    <h1>{this.state.loadedPost.title}</h1>\n                    <p>{this.state.loadedPost.body}</p>\n                    <div className=\"Edit\">\n                        <button onClick={this.deletePostHandler} className=\"Delete\">Delete</button>\n                    </div>\n                </div>\n\n            );\n        }\n        return post;\n    }\n}\n\nexport default FullPost;","import axios from 'axios';\n\nconst instance = axios.create({\n    //baseURL: 'https://jsonplaceholder.typicode.com'\n    baseURL: 'https://blog-6d4da-default-rtdb.firebaseio.com/'\n});\n\ninstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FROM INSTANCE';\n\n// instance.interceptors.request...\n\nexport default instance;","import React, { Component } from 'react';\r\nimport axios from '../../axios';\r\nimport { Link, Route, NavLink, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Post from '../../components/Post/Post';\r\n\r\nimport FullPost from '../Blog/FullPost/FullPost';\r\n// import Answered from '../Types';\r\n\r\nimport Myquestions from '../Blog/My-Questions/Myquestions';\r\nimport RothIRA_1 from '../Types/RothIRA_1';\r\n\r\n\r\nclass Posts extends Component {\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log( this.props );\r\n       \r\n        axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts.json' )\r\n            .then( response => {\r\n                //let posts = Object.values(response.data);\r\n                let keys = Object.keys(response.data);\r\n                //console.log('object KEYS'+keys);\r\n\r\n\r\n                \r\n\r\n                const updatedPosts = keys.map( key => {    \r\n                    return {\r\n                        key, ...response.data[key],\r\n                        \r\n                    }\r\n                } );\r\n                     const updatedPosts_1 = JSON.stringify(updatedPosts)\r\n                    //console.log('updatedposts'+updatedPosts_1);\r\n                    this.setState( { posts: updatedPosts } );\r\n               \r\n            } )\r\n            .catch( error => {\r\n                console.log( error );\r\n                // this.setState({error: true});\r\n            } );\r\n    }\r\n\r\n    postAnswerHandler = ( answer,id ) => {\r\n        // // this.props.history.push({pathname: '/posts/' + id});\r\n            // this.props.history.push( '/posts/' + id );\r\n           // console.log('This was clicked!'+id)\r\n        \r\n        \r\n            \r\n            \r\n\r\n            //     let newAnswer = answer;\r\n            //     let response_1 = JSON.stringify(response.data);\r\n            //     console.log('response'+response_1);\r\n            //     //let posts = Object.values(response.data);\r\n                \r\n            //     //let posts = response.data;\r\n            //     //let keys = Object.keys(response.data);\r\n                    \r\n            //     const newData = {\r\n            //         answer: newAnswer,...response.data\r\n            //     };\r\n\r\n                \r\n\r\n            //     // let newData_1 = JSON.stringify(newData)\r\n\r\n            //     // console.log('newData'+newData_1);\r\n            //     // const updatedPosts = posts.map( post => {    \r\n            //     //     return {\r\n            //     //         data, ...response.data\r\n                        \r\n            //     //     }\r\n            //     // } );\r\n\r\n            //     // const updatedPosts_1 = JSON.stringify(updatedPosts[0])\r\n            //     // console.log('updatedposts'+updatedPosts_1);\r\n            //     //this.setState( { posts: newData } );\r\n\r\n                \r\n            // });\r\n\r\n            // for (const n in this.state.posts) {\r\n            //     if (n['key'] === id) {\r\n                    \r\n            //         return n;\r\n            //     }\r\n            //     console.log('n'+n);\r\n            // }\r\n            //Object.entries(this.state.props).forEach(([]) => console.log(`${key}: ${value}`));\r\n\r\n            \r\n\r\n\r\n            //const data = this.state.posts;\r\n\r\n            //axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts/'+id+'.json' )\r\n        \r\n            // .then( response => {\r\n            //     let data = Object.values(response.data);\r\n            //     let keys = Object.keys(response.data);\r\n            //     var obj = data[key];\r\n\r\n\r\n            axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts.json' )\r\n            .then( response => {\r\n                //let posts = Object.values(response.data);\r\n                let keys = Object.keys(response.data);\r\n                const posts = Object.values(response.data);\r\n                const test = response.data[id];  //IMPORTANT----------------------------\r\n                //console.log(test);\r\n                const data_1 = {\r\n                    answer\r\n                };\r\n                const data_2 = JSON.stringify(data_1);\r\n                //console.log('DATA_2'+ data_2);\r\n\r\n\r\n                //console.log(test);\r\n                const data = this.state.posts;\r\n            // for (var key in posts) {\r\n            //     //console.log('THE id'+id);\r\n            //     console.log(key);\r\n            //         var obj = data[key];\r\n            //         console.log(obj);\r\n            //         var keyData = data[key];\r\n            //         console.log('keyDATA'+ keyData);\r\n            //         //var obj_1 = JSON.stringify(obj);\r\n                        \r\n            //                 for (var prop in obj) {\r\n            //                     //console.log('objKEY'+obj['key']);\r\n            //                     if(obj['key']===id){\r\n            //                         //console.log('THE KEY'+id)\r\n            //                         //console.log(obj[key]);\r\n            //                     }\r\n            //                     if(obj.hasOwnProperty(prop)){\r\n            //                         //console.log(prop + \" = \" + obj[prop]);\r\n                                    \r\n            //         }\r\n            //     }\r\n            \r\n            // }\r\n            axios.patch('posts/'+id+'.json', data_2);\r\n            });\r\n\r\n            \r\n            \r\n                    \r\n        }\r\n    \r\n    render () {\r\n        let posts = <p style={{ textAlign: 'center' }}>Something went wrong!</p>;\r\n        \r\n        if ( !this.state.error ) {\r\n            \r\n            posts = this.state.posts.map( (post) => {\r\n                return (\r\n                    // <Link to={'/posts/' + post.id} key={post.id}>\r\n                    <Post\r\n                        key={post.key}\r\n                        id={post.key}\r\n                        title={post.title}\r\n                        type={post.type}\r\n                        body={post.body}\r\n                        answer={post.answer}\r\n                        onChange={(value, id) => this.postAnswerHandler(value,id)}\r\n                        // clicked={() => this.postAnswerHandler(post.key, post.answer)}\r\n                         />\r\n                        \r\n                    // </Link>\r\n                );\r\n            } );\r\n        }\r\n\r\n        return (\r\n            <div className=\"Posts-Page\">\r\n            <section className=\"Menu\">\r\n                <ul className=\"Menu-Items\">\r\n                    <h1>Menu</h1>\r\n                    <li className=\"box\"><NavLink to={{\r\n                                pathname: '/myquestions'\r\n                                \r\n                            }}>My Questions</NavLink></li>\r\n                             {/* <hr /> */}\r\n                    <li className=\"box\"><NavLink to={{\r\n                                pathname: '/answered'\r\n                                \r\n                            }}>Answered</NavLink></li>\r\n                             {/* <hr /> */}\r\n                        <li className=\"box\"><NavLink to={{\r\n                                pathname: '/unanswered',\r\n                                hash: '#submit',\r\n                                search: '?quick-submit=true'\r\n                            }}>Unanswered</NavLink></li>\r\n                 </ul>\r\n            </section>\r\n                <section className=\"Posts\">\r\n                    {posts}\r\n                </section>\r\n                <section className=\"Answer-Info\">\r\n                    <h1>Popular Topics</h1>\r\n                    <ul className=\"Menu-Items\">\r\n           \r\n                    <li className=\"box\"><NavLink to={{\r\n                                pathname: '/myquestions'\r\n                                \r\n                            }}>Individual Investment</NavLink></li>\r\n                             {/* <hr /> */}\r\n                    <li className=\"box\"><NavLink to={{\r\n                                pathname: '/answered'\r\n                                \r\n                            }}>Crypto</NavLink></li>\r\n                             {/* <hr /> */}\r\n                        <li className=\"box\"><NavLink to={{\r\n                                pathname: '/unanswered',\r\n                                hash: '#submit',\r\n                                search: '?quick-submit=true'\r\n                            }}>Roth IRA</NavLink></li>\r\n                 </ul>\r\n                </section>\r\n                \r\n                <Route path=\"/RothIRA_1\" component={RothIRA_1} />\r\n                <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\r\n                <Switch>\r\n                    <Route path=\"/myquestions\" component={Myquestions} />\r\n                    {/* <Route path=\"/answered\" component={Answered} /> */}\r\n                    \r\n                    <Route path=\"/RothIRA_1\" component={RothIRA_1} />\r\n                    {/* <Route path= {'/'+ this.type} component={this.type} /> */}\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Post from '../../../components/Post/Post';\r\n\r\nimport FullPost from '../FullPost/FullPost';\r\n\r\nimport Unanswered from '../../Unanswered/Unanswered-Posts';\r\nimport Myquestions from '../My-Questions/Myquestions';\r\n\r\n// import Posts from '../Posts/Posts';\r\n// import FullPost from '../FullPost/FullPost';\r\n\r\nimport './answered-posts.css';\r\n\r\nclass Answered extends Component {\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    componentDidMount () {\r\n        // console.log( this.props );\r\n        axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts.json' )\r\n            .then( response => {\r\n                const posts = Object.values(response.data);\r\n                // console.log(typeof posts);\r\n                const updatedPosts = posts.map( post => {\r\n                    return {\r\n                        ...post,\r\n                        author: 'Max'\r\n                    }\r\n                } );\r\n                this.setState( { posts: updatedPosts } );\r\n                // console.log( response );\r\n            } )\r\n            .catch( error => {\r\n                console.log( error );\r\n                // this.setState({error: true});\r\n            } );\r\n    }\r\n\r\n    postSelectedHandler = ( id ) => {\r\n        // this.props.history.push({pathname: '/posts/' + id});\r\n        this.props.history.push( '/posts/' + id );\r\n        console.log(this.props.history);\r\n    }\r\n\r\n    render () {\r\n        let posts = <p style={{ textAlign: 'center' }}>Something went wrong!</p>;\r\n        if ( !this.state.error ) {\r\n            posts = this.state.posts.map( (post) => {\r\n                return (\r\n                    // <Link to={'/posts/' + post.id} key={post.id}>\r\n                    <Post\r\n                        key={post.id}\r\n                        title={post.title}\r\n                        author={post.author}\r\n                        clicked={() => this.postSelectedHandler( post.id )} />\r\n                        \r\n                    // </Link>\r\n                );\r\n            } );\r\n        }\r\n\r\n        return (\r\n            <div className=\"Posts-Page\">\r\n                <section className=\"Menu\">\r\n                    <ul className=\"Menu-Items\">\r\n                    <li><NavLink to={{\r\n                                pathname: '/myquestions'\r\n                                \r\n                            }}>My Questions</NavLink></li>\r\n                        <li><NavLink to={{\r\n                                pathname: '/unanswered',\r\n                                hash: '#submit',\r\n                                search: '?quick-submit=true'\r\n                            }}>Unanswered</NavLink></li>\r\n                    </ul>\r\n                </section>\r\n                <section className=\"Posts\">\r\n                    {posts}\r\n                </section>\r\n                <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\r\n                <Switch>\r\n                    <Route path=\"/myquestions\" component={Myquestions} />\r\n                    <Route path=\"/unanswered\" component={Unanswered} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n \r\n\r\n//  state = {\r\n//      posts:[]\r\n//  }\r\n\r\n//  render () {\r\n//      return(\r\n//         <div>\r\n//             <Posts />\r\n//         </div>\r\n         \r\n//      );\r\n//  }\r\n }\r\n\r\nexport default Answered;","import React, { Component } from 'react';\nimport axios from '../../../axios';\nimport { Link, Route, NavLink, Switch, Redirect } from 'react-router-dom';\n\nimport Post from '../../../components/Post/Post';\nimport './Posts.css';\nimport FullPost from '../FullPost/FullPost';\nimport Answered from '../answered/answered-posts';\nimport Unanswered from '../../Unanswered/Unanswered-Posts';\nimport Myquestions from '../My-Questions/Myquestions';\nimport RothIRA_1 from '../../Types/RothIRA_1';\n\n\nclass Posts extends Component {\n    state = {\n        posts: [],\n        isFiltered: false,\n        isError: false\n    }\n\n    componentDidMount () {\n        console.log( this.props );\n       \n        axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts.json' )\n            .then( response => {\n                //let posts = Object.values(response.data);\n                let keys = Object.keys(response.data);\n                //console.log('object KEYS'+keys);\n\n\n                \n\n                const updatedPosts = keys.map( key => {    \n                    return {\n                        key, ...response.data[key],\n                        \n                    }\n                } );\n                     const updatedPosts_1 = JSON.stringify(updatedPosts)\n                    //console.log('updatedposts'+updatedPosts_1);\n                    this.setState( { posts: updatedPosts } );\n               \n            } )\n            .catch( error => {\n                console.log( error );\n                // this.setState({error: true});\n            } );\n    }\n\n    postAnswerHandler = ( answer,id ) => {\n    \n\n\n            axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts.json' )\n            .then( response => {\n                //let posts = Object.values(response.data);\n                let keys = Object.keys(response.data);\n                const posts = Object.values(response.data);\n                const test = response.data[id];  //IMPORTANT----------------------------\n                const test_1 = test.isAnswered;\n                //console.log(answer);\n                const data_1 = {\n                    answer,\n                    isAnswered: true\n                    \n                };\n                const data_2 = JSON.stringify(data_1);\n                //console.log(data_1);\n                const data = this.state.posts;\n         \n            \n            axios.patch('posts/'+id+'.json', data_2);\n            });        \n        }\n\n       \n\n        displayAnswerHandler = (answer,id) => {\n            \n           //alert('ON SUBMIT WORKED')\n            console.log(answer);\n            \n            axios.get( 'https://blog-6d4da-default-rtdb.firebaseio.com/posts.json' )\n            .then( response => {\n                //let posts = Object.values(response.data);\n                let keys = Object.keys(response.data);\n                const posts = Object.values(response.data);\n                const test = response.data[id];  //IMPORTANT----------------------------\n                console.log('This was clicked');\n                const data_1 = {\n                    answer,\n                    isAnswered: true\n                };\n                const data_2 = JSON.stringify(data_1);\n                //alert(data_2);\n                const data = this.state.posts;\n       \n            \n            axios.patch('posts/'+id+'.json', data_2);\n            });\n            \n        }\n\n\n        onClickFilter = () => {\n            // toggles filter on and off\n            this.setState((prevState) => ({\n              isFiltered: !prevState.isFiltered\n            }));\n\n            var x = document.getElementById(\"answeredButton\");\n            //console.log(x);\n                if (x.innerHTML === \"Answered\") {\n                     x.innerHTML = \"All Questions\";\n                } else {\n                    x.innerHTML = \"Answered\";\n  }\n          };\n        \n\n    render () {\n        // let posts = <p style={{ textAlign: 'center' }}>Something went wrong!</p>;\n        \n        // show only answered posts if isFiltered is true, or all posts if false\n    const visiblePosts = this.state.isFiltered\n      ? this.state.posts.filter((post) => post.isAnswered)\n      : this.state.posts;\n\n    \n        return (\n\n            <div className=\"Posts-Page\">\n                 {/* {renderAuthButton()}  */}\n                 \n                \n                <div>\n                \n                </div>\n\n\n\n            <section className=\"Menu\">\n                <ul className=\"Menu-Items\">\n                    <h1>Menu</h1>\n                    {/* <li className=\"box\"><NavLink to={{\n                                pathname: '/myquestions'\n                                \n                            }}>My Questions</NavLink></li>\n                             {/* <hr /> */}\n                    {/* <li className=\"box\"><NavLink to={{\n                                pathname: '/answered'\n                                \n                            }}>Answered</NavLink></li>\n                             <hr /> */}\n                        {/* <li className=\"box\"><NavLink to={{\n                                pathname: '/unanswered',\n                                hash: '#submit',\n                                search: '?quick-submit=true'\n                            }}>Unanswered</NavLink></li> */}\n                            <button id=\"answeredButton\" onClick={this.onClickFilter}>Answered</button>\n                 </ul>\n            </section>\n                <section className=\"Posts\">\n                    {/* {posts} */}\n                    {visiblePosts.map((post) => {\n          return (\n            <Post\n              key={post.key}\n              id={post.key}\n              title={post.title}\n              type={post.type}\n              body={post.body}\n              answer={post.answer}\n              onChange={(value, id) => this.postAnswerHandler(value, id)}\n              clicked={(body) => this.displayAnswerHandler(body)}\n            />\n          );\n        })}\n                </section>\n                <section className=\"Answer-Info\">\n                    <h1>Popular Topics</h1>\n                    <ul className=\"Menu-Items\">\n           \n                    <li className=\"box\"><NavLink to={{\n                                pathname: '/myquestions'\n                                \n                            }}>Individual Investment</NavLink></li>\n                             {/* <hr /> */}\n                    <li className=\"box\"><NavLink to={{\n                                pathname: '/answered'\n                                \n                            }}>Crypto</NavLink></li>\n                             {/* <hr /> */}\n                        <li className=\"box\"><NavLink to={{\n                                pathname: '/unanswered',\n                                hash: '#submit',\n                                search: '?quick-submit=true'\n                            }}>Roth IRA</NavLink></li>\n                        \n                 </ul>\n                </section>\n                \n                <Route path=\"/RothIRA_1\" component={RothIRA_1} />\n                <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\n                <Switch>\n                    <Route path=\"/myquestions\" component={Myquestions} />\n                    <Route path=\"/answered\" component={Answered} />\n                    <Route path=\"/unanswered\" component={Unanswered} />\n                    <Route path=\"/RothIRA_1\" component={RothIRA_1} />\n                    {/* <Route path= {'/'+ this.type} component={this.type} /> */}\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Posts;","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount () {\n            importComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default});\n                });\n        }\n        \n        render () {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\n\nimport './Blog.css';\nimport Posts from './Posts/Posts';\nimport asyncComponent from '../../hoc/asyncComponent';\n// import NewPost from './NewPost/NewPost';\n\n\nimport Unanswered from '../Unanswered/Unanswered-Posts';\nimport Answered from './answered/answered-posts';\nimport Myquestions from './My-Questions/Myquestions';\nimport RothIRA_1 from '../Types/RothIRA_1';\nimport photo from '../../images/Ecommerce_(39).jpg';\n\nconst AsyncNewPost = asyncComponent(() => {\n    return import('./NewPost/NewPost');\n});\n\nclass Blog extends Component {\n    state = {\n        auth: true\n    }\n\n    render () {\n        return (\n            <div className=\"Blog\">\n                <div className=\"questions-blob\">\n                <header>\n                    <nav>\n                        <ul>\n                            \n                            <li className=\"CoinLogo\"><img /></li>\n                            <li className=\"Posts-Nav\"><NavLink\n                                to=\"/posts/\"\n                                exact\n                                activeClassName=\"my-active\"\n                                \n                                \n                                >Questions</NavLink></li>\n                            <li  className=\"Posts-NewQuestion\"><NavLink to={{\n                                pathname: '/new-post',\n                                hash: '#submit',\n                                search: '?quick-submit=true'\n                            }}>New Question</NavLink></li>\n                        </ul>\n                    </nav>\n                </header>\n                </div>\n                \n                {/* <Route path=\"/\" exact render={() => <h1>Home</h1>} />\n                <Route path=\"/\" render={() => <h1>Home 2</h1>} /> */}\n                <Switch>\n                    {this.state.auth ? <Route path=\"/new-post\" component={AsyncNewPost} /> : null}\n                    <Route path=\"/posts\" component={Posts} />\n                    <Route path=\"/answered\" component={Answered} />\n                    <Route path=\"/unanswered\" component={Unanswered} />\n                    <Route path=\"/myquestions\" component={Myquestions} />\n                    <Route path=\"/RothIRA_1\" component={RothIRA_1} />\n                    <Route path={'/RothIRA'} render={() => (<RothIRA_1/>)}/>\n                    {/* <Redirect from=\"/\" to=\"/posts\" />  */}\n                    {/* <Route path=\"/\" component={Posts} /> */}\n                    <Route render={() => <h1>Not found :(</h1>}/>\n                    \n                   \n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Blog;","export default __webpack_public_path__ + \"static/media/Ecommerce_(39).a139d22c.jpg\";","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Answered from './containers/Blog/answered/answered-posts';\n\nimport Blog from './containers/Blog/Blog';\nimport Posts from './containers/Blog/Posts/Posts';\n\nimport './index.css';\n\nclass App extends Component {\n  render () {\n    return (\n      // <BrowserRouter>\n      <BrowserRouter basename ={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {/* <Blog /> */}\n          <Blog>\n            <Posts>\n              <Answered /> \n            </Posts >  \n          </Blog>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://blog-6d4da-default-rtdb.firebaseio.com/';\naxios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\naxios.interceptors.request.use(request => {\n    // console.log(request);\n    // Edit request config\n    return request;\n}, error => {\n    console.log(error);\n    return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n    // console.log(response);\n    // Edit request config\n    return response;\n}, error => {\n    console.log(error);\n    return Promise.reject(error);\n});\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}